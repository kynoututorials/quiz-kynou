[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"collections\":{\"quiz.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/quiz.js                                                                                        //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nQuiz = new Mongo.Collection('quiz');                                                                          // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"bootstrap.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/bootstrap.js                                                                                        //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\n//This function will be executed when the app starts                                                          //\nMeteor.startup(function () {                                                                                  // 2\n                                                                                                              //\n    //If there is no quiz available, it creates one with simple data                                          //\n    if (Quiz.find().count() === 0) {                                                                          // 5\n        var quizSimple = [{                                                                                   // 6\n            question: 'Did you like the tutorial?',                                                           // 8\n            options: [{ text: 'Yes, very much!', votes: 0 }, { text: 'More or less', votes: 0 }, { text: 'No. Prefer JavaScript', votes: 0 }]\n        }, {                                                                                                  // 7\n            question: 'How do you evalulate this article?',                                                   // 16\n            options: [{ text: 'Bad', votes: 0 }, { text: 'Good', votes: 0 }, { text: 'Excellent', votes: 0 }]\n        }];                                                                                                   // 15\n                                                                                                              //\n        //Iterate over all quiz records and insert each into the database                                     //\n        _.each(quizSimple, function (quiz) {                                                                  // 26\n            Quiz.insert(quiz);                                                                                // 27\n        });                                                                                                   // 28\n    }                                                                                                         // 29\n});                                                                                                           // 30\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"social-config.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/social-config.js                                                                                    //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nServiceConfiguration.configurations.remove({                                                                  // 1\n    service: 'facebook'                                                                                       // 2\n});                                                                                                           // 1\nServiceConfiguration.configurations.insert({                                                                  // 4\n    service: 'facebook',                                                                                      // 5\n    appId: '932088886917118',                                                                                 // 6\n    secret: '123@Sucesso'                                                                                     // 7\n});                                                                                                           // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\"]});\nrequire(\"./collections/quiz.js\");\nrequire(\"./server/bootstrap.js\");\nrequire(\"./server/social-config.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/collections/quiz.js","/server/bootstrap.js","/server/social-config.js"],"names":[],"mappings":";;;;;;;;AAAA,OAAO,IAAI,MAAM,UAAV,CAAqB,MAArB,CAAP,+E;;;;;;;;;;;;ACCA,OAAO,OAAP,CAAe,YAAY;;;AAGvB,QAAI,KAAK,IAAL,GAAY,KAAZ,OAAwB,CAA5B,EAA+B;AAC3B,YAAI,aAAa,CACb;AACI,sBAAU,4BADd;AAEI,qBAAS,CACL,EAAE,MAAM,iBAAR,EAA2B,OAAO,CAAlC,EADK,EAEL,EAAE,MAAM,cAAR,EAAwB,OAAO,CAA/B,EAFK,EAGL,EAAE,MAAM,uBAAR,EAAiC,OAAO,CAAxC,EAHK;AAFb,SADa,EASb;AACI,sBAAU,oCADd;AAEI,qBAAS,CACL,EAAE,MAAM,KAAR,EAAe,OAAO,CAAtB,EADK,EAEL,EAAE,MAAM,MAAR,EAAgB,OAAO,CAAvB,EAFK,EAGL,EAAE,MAAM,WAAR,EAAqB,OAAO,CAA5B,EAHK;AAFb,SATa,CAAjB;;;AAoBA,UAAE,IAAF,CAAO,UAAP,EAAmB,UAAU,IAAV,EAAgB;AAC/B,iBAAK,MAAL,CAAY,IAAZ;AACH,SAFD;AAGH;AACJ,CA5BD,kH;;;;;;;;;;;ACDA,qBAAqB,cAArB,CAAoC,MAApC,CAA2C;AACvC,aAAS;AAD8B,CAA3C;AAGA,qBAAqB,cAArB,CAAoC,MAApC,CAA2C;AACvC,aAAS,UAD8B;AAEvC,WAAO,iBAFgC;AAGvC,YAAQ;AAH+B,CAA3C,iH","file":"/app.js","sourcesContent":["Quiz = new Mongo.Collection('quiz');","//This function will be executed when the app starts\r\nMeteor.startup(function () {\r\n\r\n    //If there is no quiz available, it creates one with simple data\r\n    if (Quiz.find().count() === 0) {\r\n        var quizSimple = [\r\n            {\r\n                question: 'Did you like the tutorial?',\r\n                options: [\r\n                    { text: 'Yes, very much!', votes: 0 },\r\n                    { text: 'More or less', votes: 0 },\r\n                    { text: 'No. Prefer JavaScript', votes: 0 }\r\n                ]\r\n            },\r\n            {\r\n                question: 'How do you evalulate this article?',\r\n                options: [\r\n                    { text: 'Bad', votes: 0 },\r\n                    { text: 'Good', votes: 0 },\r\n                    { text: 'Excellent', votes: 0 }\r\n                ]\r\n            }\r\n        ];\r\n\r\n        //Iterate over all quiz records and insert each into the database\r\n        _.each(quizSimple, function (quiz) {\r\n            Quiz.insert(quiz);\r\n        });\r\n    }\r\n});","ServiceConfiguration.configurations.remove({\r\n    service: 'facebook'\r\n});\r\nServiceConfiguration.configurations.insert({\r\n    service: 'facebook',\r\n    appId: '932088886917118',\r\n    secret: '123@Sucesso'\r\n});  "]}}]